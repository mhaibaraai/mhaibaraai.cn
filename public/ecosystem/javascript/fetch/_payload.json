[{"data":1,"prerenderedAt":1552},["ShallowReactive",2],{"navigation":3,"docs-/ecosystem/javascript/fetch":290,"surround-/ecosystem/javascript/fetch":1549},[4,147,227],{"title":5,"description":6,"icon":7,"path":8,"stem":9,"children":10,"page":28},"语言与生态","按语言、框架与工具分类整理，聚焦实践要点与可复用知识。","i-lucide-folder-code","/ecosystem","0.ecosystem",[11,29,46,58,70,87,118,130],{"title":12,"description":13,"icon":14,"path":15,"stem":16,"children":17,"page":28},"JavaScript","JavaScript 基础语法、异步编程和框架使用。","i-tabler-brand-javascript","/ecosystem/javascript","0.ecosystem/0.javascript",[18,23],{"title":19,"path":20,"stem":21,"description":22},"异步编程","/ecosystem/javascript/async-await","0.ecosystem/0.javascript/async-await","深入理解 Promise 和 async/await 异步编程模式",{"title":24,"path":25,"stem":26,"description":27},"网络请求","/ecosystem/javascript/fetch","0.ecosystem/0.javascript/fetch","使用 fetch API 进行网络请求和数据交互",false,{"title":30,"description":31,"icon":32,"path":33,"stem":34,"children":35,"page":28},"样式技术","CSS 和预处理器的高级特性和最佳实践","i-mdi-palette-outline","/ecosystem/styles","0.ecosystem/1.styles",[36,41],{"title":37,"path":38,"stem":39,"description":40},"CSS 高级特性","/ecosystem/styles/css","0.ecosystem/1.styles/css","CSS 变量、Flexbox 响应式布局等现代 CSS 特性",{"title":42,"path":43,"stem":44,"description":45},"Sass 预处理器","/ecosystem/styles/sass","0.ecosystem/1.styles/sass","Sass 模块化、构建工具配置和弃用警告处理",{"title":47,"description":48,"icon":49,"path":50,"stem":51,"children":52,"page":28},"TypeScript","TypeScript 的类型系统、接口、泛型等内容。","i-tabler-brand-typescript","/ecosystem/typescript","0.ecosystem/2.typescript",[53],{"title":54,"path":55,"stem":56,"description":57},"全局变量","/ecosystem/typescript/declare-global","0.ecosystem/2.typescript/declare-global","在 TypeScript 中使用全局类型。",{"title":59,"description":60,"icon":61,"path":62,"stem":63,"children":64,"page":28},"Vue","Vue.js 框架及其生态系统的使用指南和最佳实践。","i-tabler-brand-vue","/ecosystem/vue","0.ecosystem/3.vue",[65],{"title":66,"path":67,"stem":68,"description":69},"踩坑笔记","/ecosystem/vue/issues","0.ecosystem/3.vue/issues","记录 Vue 开发过程中遇到的问题和解决方案。",{"title":71,"description":72,"icon":73,"path":74,"stem":75,"children":76,"page":28},"Vite","Vite 是一个现代化的构建工具，它提供了快速的开发体验和高效的构建性能。","i-tabler-brand-vite","/ecosystem/vite","0.ecosystem/4.vite",[77,82],{"title":78,"path":79,"stem":80,"description":81},"按需自动导入","/ecosystem/vite/auto-import","0.ecosystem/4.vite/auto-import","组件、API 和图标按需自动导入，简化代码并提升开发效率。",{"title":83,"path":84,"stem":85,"description":86},"Vite 资源导入","/ecosystem/vite/resources-import","0.ecosystem/4.vite/resources-import","Vite 提供了多种灵活的静态资源导入方式，无需手动管理文件路径。",{"title":88,"description":89,"icon":90,"path":91,"stem":92,"children":93,"page":28},"Nuxt","Nuxt 是一个基于 Vue 的通用框架，用于构建服务器端渲染 (SSR) 和静态站点应用程序。","i-tabler-brand-nuxt","/ecosystem/nuxt","0.ecosystem/5.nuxt",[94,99,103,108,113],{"title":95,"path":96,"stem":97,"description":98},"Copy Page","/ecosystem/nuxt/copy-page","0.ecosystem/5.nuxt/copy-page","为用户与 LLM 提供「干净的 Markdown 原文」，可直接复制或在新标签页查看。",{"title":66,"path":100,"stem":101,"description":102},"/ecosystem/nuxt/issues","0.ecosystem/5.nuxt/issues","记录 Nuxt 开发过程中遇到的问题和解决方案。",{"title":104,"path":105,"stem":106,"description":107},"Nuxt LLMs","/ecosystem/nuxt/llms","0.ecosystem/5.nuxt/llms","使用 nuxt-llms 生成 /llms.txt，并规范化站内链接以便 LLM 抓取。",{"title":109,"path":110,"stem":111,"description":112},"Nuxt SEO","/ecosystem/nuxt/nuxt-seo","0.ecosystem/5.nuxt/nuxt-seo","Nuxt SEO 实战配置指南",{"title":114,"path":115,"stem":116,"description":117},"Nuxt SSR + PM2 部署","/ecosystem/nuxt/ssr-pm2-deploy","0.ecosystem/5.nuxt/ssr-pm2-deploy","在 Ubuntu 上使用 PM2 集群模式部署 Nuxt SSR，并通过 Nginx（Docker）反向代理与 Cloudflare 前置加速。",{"title":119,"description":120,"icon":121,"path":122,"stem":123,"children":124,"page":28},"UI 组件库","常用的 UI 组件库。","i-lucide-library","/ecosystem/ui-libraries","0.ecosystem/6.ui-libraries",[125],{"title":126,"path":127,"stem":128,"description":129},"Element Plus","/ecosystem/ui-libraries/element-plus","0.ecosystem/6.ui-libraries/element-plus","在使用 Element Plus 组件库时遇到的常见问题及其解决方案。",{"title":131,"description":132,"icon":133,"path":134,"stem":135,"children":136,"page":28},"Java","记录我在 Java 与相关框架中的理解与踩坑，包括语言基础、JVM、并发、Spring、构建与测试等。","i-mdi-language-java","/ecosystem/java","0.ecosystem/7.java",[137,142],{"title":138,"path":139,"stem":140,"description":141},"全局依赖缓存位置","/ecosystem/java/global-cache","0.ecosystem/7.java/global-cache","说明 Maven 与 Gradle 全局依赖缓存位置",{"title":143,"path":144,"stem":145,"description":146},"安装 Java 与构建工具","/ecosystem/java/mac-install","0.ecosystem/7.java/mac-install","如何使用 Homebrew 在 macOS 上安装和管理多个 Java 版本。",{"title":148,"description":149,"icon":150,"path":151,"stem":152,"children":153,"page":28},"实践指南","从环境部署到平台开发的实践指南。","i-lucide-rocket","/guides","1.guides",[154,176,193,215],{"title":155,"description":156,"icon":157,"path":158,"stem":159,"children":160,"page":28},"环境部署","Docker、PostgreSQL 和 DigitalOcean 的部署指南。","i-lucide-server","/guides/deployment","1.guides/deployment",[161,166,171],{"title":162,"path":163,"stem":164,"description":165},"DigitalOcean","/guides/deployment/digitalocean","1.guides/deployment/digitalocean","DigitalOcean 使用指南",{"title":167,"path":168,"stem":169,"description":170},"Docker","/guides/deployment/docker","1.guides/deployment/docker","Docker 安装和使用指南",{"title":172,"path":173,"stem":174,"description":175},"PostgreSQL 部署","/guides/deployment/postgresql-guide","1.guides/deployment/postgresql-guide","使用 Docker Compose 部署 PostgreSQL",{"title":177,"description":178,"icon":179,"path":180,"stem":181,"children":182,"page":28},"操作系统","macOS 和 Linux 的环境配置。","i-lucide-laptop","/guides/os","1.guides/os",[183,188],{"title":184,"path":185,"stem":186,"description":187},"Linux","/guides/os/linux","1.guides/os/linux","Linux 常用命令、服务器管理、开发环境配置等",{"title":189,"path":190,"stem":191,"description":192},"macOS","/guides/os/macos","1.guides/os/macos","记录一次 Mac 环境配置",{"title":194,"description":195,"icon":196,"path":197,"stem":198,"children":199,"page":28},"平台开发","浙政钉和 iServer 等平台的开发实践。","i-lucide-tv-minimal","/guides/platforms","1.guides/platforms",[200,205,210],{"title":201,"path":202,"stem":203,"description":204},"浙政钉开发","/guides/platforms/dingtalk","1.guides/platforms/dingtalk","浙政钉开发实用技巧",{"title":206,"path":207,"stem":208,"description":209},"GitLab CI/CD 完全指南","/guides/platforms/gitlab-ci","1.guides/platforms/gitlab-ci","一份涵盖从入门、配置到问题排查的完整 CI/CD 实践文档，实现快速上手并高效利用自动化流水线。",{"title":211,"path":212,"stem":213,"description":214},"IServer 踩坑归集","/guides/platforms/iserver","1.guides/platforms/iserver","超图服务调用踩坑归集",{"title":216,"description":217,"icon":218,"path":219,"stem":220,"children":221,"page":28},"运行时环境","Node.js、Java 等运行时环境的配置和使用指南。","i-lucide-router","/guides/runtime","1.guides/runtime",[222],{"title":223,"path":224,"stem":225,"description":226},"Node","/guides/runtime/node","1.guides/runtime/node","Node 的配置和使用指南。",{"title":228,"description":229,"icon":230,"path":231,"stem":232,"children":233,"page":28},"工具集","开发过程中常用工具的配置和使用指南。","i-lucide-wrench","/tools","2.tools",[234,256,273],{"title":235,"description":236,"icon":237,"path":238,"stem":239,"children":240,"page":28},"IDE 编辑器","编辑器的配置和使用指南。","i-lucide-monitor","/tools/editors","2.tools/editors",[241,246,251],{"title":242,"path":243,"stem":244,"description":245},"Cursor","/tools/editors/.cursor","2.tools/editors/.cursor","Cursor 的使用、配置和插件指南",{"title":247,"path":248,"stem":249,"description":250},"IntelliJ IDEA","/tools/editors/idea","2.tools/editors/idea","在 macOS 上安装和配置 IntelliJ IDEA，优化你的 Java 开发环境。",{"title":252,"path":253,"stem":254,"description":255},"VS Code","/tools/editors/vscode","2.tools/editors/vscode","VS Code 的配置和使用指南。",{"title":257,"description":258,"icon":259,"path":260,"stem":261,"children":262,"page":28},"包管理器","Homebrew 和 pnpm 等包管理器的使用。","i-lucide-hammer","/tools/package-managers","2.tools/package-managers",[263,268],{"title":264,"path":265,"stem":266,"description":267},"Homebrew","/tools/package-managers/homebrew","2.tools/package-managers/homebrew","Homebrew 的配置和使用指南。",{"title":269,"path":270,"stem":271,"description":272},"Pnpm","/tools/package-managers/pnpm","2.tools/package-managers/pnpm","pnpm 的配置和使用指南。",{"title":274,"description":275,"icon":276,"path":277,"stem":278,"children":279,"page":28},"版本控制","Git 和 fnm 等版本控制工具的配置和使用。","i-lucide-git-branch","/tools/version-control","2.tools/version-control",[280,285],{"title":281,"path":282,"stem":283,"description":284},"Fnm","/tools/version-control/fnm","2.tools/version-control/fnm","fnm 的安装、配置、使用、常见问题等。",{"title":286,"path":287,"stem":288,"description":289},"Git","/tools/version-control/git","2.tools/version-control/git","Git 的配置、使用、常见问题等。",{"id":291,"title":24,"body":292,"description":27,"extension":1543,"head":1544,"links":1544,"meta":1545,"navigation":406,"ogImage":1544,"path":25,"schemaOrg":1544,"seo":1546,"sitemap":1547,"stem":26,"__hash__":1548},"docs/0.ecosystem/0.javascript/fetch.md",{"type":293,"value":294,"toc":1534},"minimark",[295,299,322,636,639,644,698,701,710,1118,1125,1242,1245,1265,1272,1530],[296,297,298],"h2",{"id":298},"基本用法",[300,301,302,306,307,310,311,313,314,317,318,321],"p",{},[303,304,305],"code",{},"fetch()"," 方法的第一个参数是要请求的资源的 URL。它会返回一个 ",[303,308,309],{},"Promise","，该 ",[303,312,309],{}," 在接收到服务器的响应头后 ",[303,315,316],{},"resolve"," 为一个 ",[303,319,320],{},"Response"," 对象。",[323,324,330],"pre",{"className":325,"code":326,"filename":327,"language":328,"meta":329,"style":329},"language-ts shiki shiki-themes material-theme-lighter github-light github-dark monokai","async function fetchData(url) {\n  try {\n    const response = await fetch(url)\n\n    // response.ok 检查 HTTP 状态码是否在 200-299 范围内\n    if (!response.ok) {\n      throw new Error(`HTTP 错误！状态: ${response.status}`)\n    }\n\n    // response.json() 读取响应体并解析为 JSON\n    const data = await response.json()\n    console.log(data)\n    return data\n  }\n  catch (error) {\n    console.error('无法获取数据:', error)\n  }\n}\n\n// 示例：从公共 API 获取用户数据\nfetchData('https://jsonplaceholder.typicode.com/users/1')\n","basic-fetch.ts","ts","",[303,331,332,363,372,401,408,415,442,483,489,494,500,522,540,549,555,570,597,602,608,613,619],{"__ignoreMap":329},[333,334,337,341,345,349,353,357,360],"span",{"class":335,"line":336},"line",1,[333,338,340],{"class":339},"sTNss","async",[333,342,344],{"class":343},"srJo8"," function",[333,346,348],{"class":347},"sD0ED"," fetchData",[333,350,352],{"class":351},"swvn1","(",[333,354,356],{"class":355},"sQgqH","url",[333,358,359],{"class":351},")",[333,361,362],{"class":351}," {\n",[333,364,366,370],{"class":335,"line":365},2,[333,367,369],{"class":368},"sRxSC","  try",[333,371,362],{"class":351},[333,373,375,378,382,386,389,392,395,398],{"class":335,"line":374},3,[333,376,377],{"class":343},"    const",[333,379,381],{"class":380},"s91G_"," response",[333,383,385],{"class":384},"sGXK2"," =",[333,387,388],{"class":368}," await",[333,390,391],{"class":347}," fetch",[333,393,352],{"class":394},"squCx",[333,396,356],{"class":397},"ss--_",[333,399,400],{"class":394},")\n",[333,402,404],{"class":335,"line":403},4,[333,405,407],{"emptyLinePlaceholder":406},true,"\n",[333,409,411],{"class":335,"line":410},5,[333,412,414],{"class":413},"ss7Ak","    // response.ok 检查 HTTP 状态码是否在 200-299 范围内\n",[333,416,418,421,424,427,430,433,436,439],{"class":335,"line":417},6,[333,419,420],{"class":368},"    if",[333,422,423],{"class":394}," (",[333,425,426],{"class":384},"!",[333,428,429],{"class":397},"response",[333,431,432],{"class":351},".",[333,434,435],{"class":397},"ok",[333,437,438],{"class":394},") ",[333,440,441],{"class":351},"{\n",[333,443,445,448,451,454,456,460,464,468,470,473,476,479,481],{"class":335,"line":444},7,[333,446,447],{"class":368},"      throw",[333,449,450],{"class":384}," new",[333,452,453],{"class":347}," Error",[333,455,352],{"class":394},[333,457,459],{"class":458},"siCPE","`",[333,461,463],{"class":462},"sLACW","HTTP 错误！状态: ",[333,465,467],{"class":466},"slF1C","${",[333,469,429],{"class":397},[333,471,432],{"class":472},"s00De",[333,474,475],{"class":397},"status",[333,477,478],{"class":466},"}",[333,480,459],{"class":458},[333,482,400],{"class":394},[333,484,486],{"class":335,"line":485},8,[333,487,488],{"class":351},"    }\n",[333,490,492],{"class":335,"line":491},9,[333,493,407],{"emptyLinePlaceholder":406},[333,495,497],{"class":335,"line":496},10,[333,498,499],{"class":413},"    // response.json() 读取响应体并解析为 JSON\n",[333,501,503,505,508,510,512,514,516,519],{"class":335,"line":502},11,[333,504,377],{"class":343},[333,506,507],{"class":380}," data",[333,509,385],{"class":384},[333,511,388],{"class":368},[333,513,381],{"class":397},[333,515,432],{"class":351},[333,517,518],{"class":347},"json",[333,520,521],{"class":394},"()\n",[333,523,525,528,530,533,535,538],{"class":335,"line":524},12,[333,526,527],{"class":397},"    console",[333,529,432],{"class":351},[333,531,532],{"class":347},"log",[333,534,352],{"class":394},[333,536,537],{"class":397},"data",[333,539,400],{"class":394},[333,541,543,546],{"class":335,"line":542},13,[333,544,545],{"class":368},"    return",[333,547,548],{"class":397}," data\n",[333,550,552],{"class":335,"line":551},14,[333,553,554],{"class":351},"  }\n",[333,556,558,561,563,566,568],{"class":335,"line":557},15,[333,559,560],{"class":368},"  catch",[333,562,423],{"class":394},[333,564,565],{"class":397},"error",[333,567,438],{"class":394},[333,569,441],{"class":351},[333,571,573,575,577,579,581,584,587,589,592,595],{"class":335,"line":572},16,[333,574,527],{"class":397},[333,576,432],{"class":351},[333,578,565],{"class":347},[333,580,352],{"class":394},[333,582,583],{"class":458},"'",[333,585,586],{"class":462},"无法获取数据:",[333,588,583],{"class":458},[333,590,591],{"class":351},",",[333,593,594],{"class":397}," error",[333,596,400],{"class":394},[333,598,600],{"class":335,"line":599},17,[333,601,554],{"class":351},[333,603,605],{"class":335,"line":604},18,[333,606,607],{"class":351},"}\n",[333,609,611],{"class":335,"line":610},19,[333,612,407],{"emptyLinePlaceholder":406},[333,614,616],{"class":335,"line":615},20,[333,617,618],{"class":413},"// 示例：从公共 API 获取用户数据\n",[333,620,622,625,627,629,632,634],{"class":335,"line":621},21,[333,623,624],{"class":347},"fetchData",[333,626,352],{"class":397},[333,628,583],{"class":458},[333,630,631],{"class":462},"https://jsonplaceholder.typicode.com/users/1",[333,633,583],{"class":458},[333,635,400],{"class":397},[296,637,638],{"id":638},"处理响应",[300,640,641,643],{},[303,642,320],{}," 对象提供了多种方法来处理不同格式的响应体：",[645,646,647,657,665,677,687],"ul",{},[648,649,650,656],"li",{},[651,652,653],"strong",{},[303,654,655],{},"response.json()",": 解析响应体为 JSON 对象。",[648,658,659,664],{},[651,660,661],{},[303,662,663],{},"response.text()",": 将响应体作为纯文本读取。",[648,666,667,672,673,676],{},[651,668,669],{},[303,670,671],{},"response.blob()",": 将响应体处理为 ",[303,674,675],{},"Blob"," 对象，用于处理图片、音频等二进制文件。",[648,678,679,672,684,321],{},[651,680,681],{},[303,682,683],{},"response.formData()",[303,685,686],{},"FormData",[648,688,689,672,694,697],{},[651,690,691],{},[303,692,693],{},"response.arrayBuffer()",[303,695,696],{},"ArrayBuffer"," 对象，用于处理通用的二进制数据。",[296,699,700],{"id":700},"配置请求",[300,702,703,705,706,709],{},[303,704,305],{}," 方法可以接受第二个可选参数，一个 ",[303,707,708],{},"init"," 配置对象，用于自定义请求。",[323,711,714],{"className":325,"code":712,"filename":713,"language":328,"meta":329,"style":329},"async function postData(url, data) {\n  try {\n    const response = await fetch(url, {\n      // 请求方法\n      method: 'POST',\n      // 请求头\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      // 请求体，必须是字符串\n      body: JSON.stringify(data)\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP 错误！状态: ${response.status}`)\n    }\n\n    const responseData = await response.json()\n    console.log('成功:', responseData)\n    return responseData\n  }\n  catch (error) {\n    console.error('无法发送数据:', error)\n  }\n}\n\n// 示例：向 API 发送一个新的帖子\nconst newPost = {\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n}\n\npostData('https://jsonplaceholder.typicode.com/posts', newPost)\n","post-request.ts",[303,715,716,737,743,763,768,787,792,801,822,827,832,853,860,864,882,910,914,918,937,960,967,971,984,1008,1013,1018,1023,1029,1042,1059,1076,1088,1093,1098],{"__ignoreMap":329},[333,717,718,720,722,725,727,729,731,733,735],{"class":335,"line":336},[333,719,340],{"class":339},[333,721,344],{"class":343},[333,723,724],{"class":347}," postData",[333,726,352],{"class":351},[333,728,356],{"class":355},[333,730,591],{"class":351},[333,732,507],{"class":355},[333,734,359],{"class":351},[333,736,362],{"class":351},[333,738,739,741],{"class":335,"line":365},[333,740,369],{"class":368},[333,742,362],{"class":351},[333,744,745,747,749,751,753,755,757,759,761],{"class":335,"line":374},[333,746,377],{"class":343},[333,748,381],{"class":380},[333,750,385],{"class":384},[333,752,388],{"class":368},[333,754,391],{"class":347},[333,756,352],{"class":394},[333,758,356],{"class":397},[333,760,591],{"class":351},[333,762,362],{"class":351},[333,764,765],{"class":335,"line":403},[333,766,767],{"class":413},"      // 请求方法\n",[333,769,770,773,776,779,782,784],{"class":335,"line":410},[333,771,772],{"class":394},"      method",[333,774,775],{"class":351},":",[333,777,778],{"class":458}," '",[333,780,781],{"class":462},"POST",[333,783,583],{"class":458},[333,785,786],{"class":351},",\n",[333,788,789],{"class":335,"line":417},[333,790,791],{"class":413},"      // 请求头\n",[333,793,794,797,799],{"class":335,"line":444},[333,795,796],{"class":394},"      headers",[333,798,775],{"class":351},[333,800,362],{"class":351},[333,802,803,806,810,812,814,816,819],{"class":335,"line":485},[333,804,805],{"class":458},"        '",[333,807,809],{"class":808},"sJhdN","Content-Type",[333,811,583],{"class":458},[333,813,775],{"class":351},[333,815,778],{"class":458},[333,817,818],{"class":462},"application/json",[333,820,821],{"class":458},"'\n",[333,823,824],{"class":335,"line":491},[333,825,826],{"class":351},"      },\n",[333,828,829],{"class":335,"line":496},[333,830,831],{"class":413},"      // 请求体，必须是字符串\n",[333,833,834,837,839,842,844,847,849,851],{"class":335,"line":502},[333,835,836],{"class":394},"      body",[333,838,775],{"class":351},[333,840,841],{"class":380}," JSON",[333,843,432],{"class":351},[333,845,846],{"class":347},"stringify",[333,848,352],{"class":394},[333,850,537],{"class":397},[333,852,400],{"class":394},[333,854,855,858],{"class":335,"line":524},[333,856,857],{"class":351},"    }",[333,859,400],{"class":394},[333,861,862],{"class":335,"line":542},[333,863,407],{"emptyLinePlaceholder":406},[333,865,866,868,870,872,874,876,878,880],{"class":335,"line":551},[333,867,420],{"class":368},[333,869,423],{"class":394},[333,871,426],{"class":384},[333,873,429],{"class":397},[333,875,432],{"class":351},[333,877,435],{"class":397},[333,879,438],{"class":394},[333,881,441],{"class":351},[333,883,884,886,888,890,892,894,896,898,900,902,904,906,908],{"class":335,"line":557},[333,885,447],{"class":368},[333,887,450],{"class":384},[333,889,453],{"class":347},[333,891,352],{"class":394},[333,893,459],{"class":458},[333,895,463],{"class":462},[333,897,467],{"class":466},[333,899,429],{"class":397},[333,901,432],{"class":472},[333,903,475],{"class":397},[333,905,478],{"class":466},[333,907,459],{"class":458},[333,909,400],{"class":394},[333,911,912],{"class":335,"line":572},[333,913,488],{"class":351},[333,915,916],{"class":335,"line":599},[333,917,407],{"emptyLinePlaceholder":406},[333,919,920,922,925,927,929,931,933,935],{"class":335,"line":604},[333,921,377],{"class":343},[333,923,924],{"class":380}," responseData",[333,926,385],{"class":384},[333,928,388],{"class":368},[333,930,381],{"class":397},[333,932,432],{"class":351},[333,934,518],{"class":347},[333,936,521],{"class":394},[333,938,939,941,943,945,947,949,952,954,956,958],{"class":335,"line":610},[333,940,527],{"class":397},[333,942,432],{"class":351},[333,944,532],{"class":347},[333,946,352],{"class":394},[333,948,583],{"class":458},[333,950,951],{"class":462},"成功:",[333,953,583],{"class":458},[333,955,591],{"class":351},[333,957,924],{"class":397},[333,959,400],{"class":394},[333,961,962,964],{"class":335,"line":615},[333,963,545],{"class":368},[333,965,966],{"class":397}," responseData\n",[333,968,969],{"class":335,"line":621},[333,970,554],{"class":351},[333,972,974,976,978,980,982],{"class":335,"line":973},22,[333,975,560],{"class":368},[333,977,423],{"class":394},[333,979,565],{"class":397},[333,981,438],{"class":394},[333,983,441],{"class":351},[333,985,987,989,991,993,995,997,1000,1002,1004,1006],{"class":335,"line":986},23,[333,988,527],{"class":397},[333,990,432],{"class":351},[333,992,565],{"class":347},[333,994,352],{"class":394},[333,996,583],{"class":458},[333,998,999],{"class":462},"无法发送数据:",[333,1001,583],{"class":458},[333,1003,591],{"class":351},[333,1005,594],{"class":397},[333,1007,400],{"class":394},[333,1009,1011],{"class":335,"line":1010},24,[333,1012,554],{"class":351},[333,1014,1016],{"class":335,"line":1015},25,[333,1017,607],{"class":351},[333,1019,1021],{"class":335,"line":1020},26,[333,1022,407],{"emptyLinePlaceholder":406},[333,1024,1026],{"class":335,"line":1025},27,[333,1027,1028],{"class":413},"// 示例：向 API 发送一个新的帖子\n",[333,1030,1032,1035,1038,1040],{"class":335,"line":1031},28,[333,1033,1034],{"class":343},"const",[333,1036,1037],{"class":380}," newPost",[333,1039,385],{"class":384},[333,1041,362],{"class":351},[333,1043,1045,1048,1050,1052,1055,1057],{"class":335,"line":1044},29,[333,1046,1047],{"class":394},"  title",[333,1049,775],{"class":351},[333,1051,778],{"class":458},[333,1053,1054],{"class":462},"foo",[333,1056,583],{"class":458},[333,1058,786],{"class":351},[333,1060,1062,1065,1067,1069,1072,1074],{"class":335,"line":1061},30,[333,1063,1064],{"class":394},"  body",[333,1066,775],{"class":351},[333,1068,778],{"class":458},[333,1070,1071],{"class":462},"bar",[333,1073,583],{"class":458},[333,1075,786],{"class":351},[333,1077,1079,1082,1084],{"class":335,"line":1078},31,[333,1080,1081],{"class":394},"  userId",[333,1083,775],{"class":351},[333,1085,1087],{"class":1086},"sYThS"," 1\n",[333,1089,1091],{"class":335,"line":1090},32,[333,1092,607],{"class":351},[333,1094,1096],{"class":335,"line":1095},33,[333,1097,407],{"emptyLinePlaceholder":406},[333,1099,1101,1104,1106,1108,1111,1113,1115],{"class":335,"line":1100},34,[333,1102,1103],{"class":347},"postData",[333,1105,352],{"class":397},[333,1107,583],{"class":458},[333,1109,1110],{"class":462},"https://jsonplaceholder.typicode.com/posts",[333,1112,583],{"class":458},[333,1114,591],{"class":351},[333,1116,1117],{"class":397}," newPost)\n",[1119,1120,1122,1124],"h3",{"id":1121},"init-对象常用选项",[303,1123,708],{}," 对象常用选项",[645,1126,1127,1148,1160,1188,1205,1222],{},[648,1128,1129,1134,1135,1138,1139,1138,1141,1138,1144,1147],{},[651,1130,1131],{},[303,1132,1133],{},"method",": 请求方法，如 ",[303,1136,1137],{},"GET",", ",[303,1140,781],{},[303,1142,1143],{},"PUT",[303,1145,1146],{},"DELETE","。",[648,1149,1150,1155,1156,1159],{},[651,1151,1152],{},[303,1153,1154],{},"headers",": 一个包含请求头的 ",[303,1157,1158],{},"Headers"," 对象或普通对象。",[648,1161,1162,1167,1168,1138,1170,1138,1173,1138,1175,1178,1179,321,1182,1178,1184,1187],{},[651,1163,1164],{},[303,1165,1166],{},"body",": 请求体，可以是 ",[303,1169,675],{},[303,1171,1172],{},"BufferSource",[303,1174,686],{},[303,1176,1177],{},"URLSearchParams"," 或 ",[303,1180,1181],{},"ReadableStream",[303,1183,1137],{},[303,1185,1186],{},"HEAD"," 方法不能有请求体。",[648,1189,1190,1195,1196,1138,1199,1138,1202,1147],{},[651,1191,1192],{},[303,1193,1194],{},"mode",": 请求模式，如 ",[303,1197,1198],{},"cors",[303,1200,1201],{},"no-cors",[303,1203,1204],{},"same-origin",[648,1206,1207,1212,1213,1138,1216,1138,1219,1147],{},[651,1208,1209],{},[303,1210,1211],{},"cache",": 缓存模式，如 ",[303,1214,1215],{},"default",[303,1217,1218],{},"no-store",[303,1220,1221],{},"reload",[648,1223,1224,1229,1230,1233,1234,1138,1237,1138,1239,1147],{},[651,1225,1226],{},[303,1227,1228],{},"credentials",": 是否发送 ",[303,1231,1232],{},"cookies","，如 ",[303,1235,1236],{},"include",[303,1238,1204],{},[303,1240,1241],{},"omit",[296,1243,1244],{"id":1244},"错误处理",[300,1246,1247,1249,1250,1252,1253,1256,1257,1259,1260,1259,1263,1147],{},[303,1248,305],{}," 返回的 ",[303,1251,309],{}," 只有在遇到网络故障时才会 ",[303,1254,1255],{},"reject","。对于服务器返回的 HTTP 错误状态（如 404 或 500），",[303,1258,305],{}," ",[651,1261,1262],{},"不会",[303,1264,1255],{},[300,1266,1267,1268,1271],{},"因此，必须始终检查 ",[303,1269,1270],{},"response.ok"," 属性来判断请求是否成功。",[323,1273,1276],{"className":325,"code":1274,"filename":1275,"language":328,"meta":329,"style":329},"async function checkStatus(url) {\n  try {\n    const response = await fetch(url)\n\n    // 对于 404 等 HTTP 错误，fetch 不会抛出异常\n    // 需要手动检查状态\n    if (!response.ok) {\n      // 创建一个包含状态信息的错误，以便后续处理\n      throw new Error(`服务器响应错误: ${response.status} ${response.statusText}`)\n    }\n\n    console.log('请求成功！')\n    const data = await response.json()\n    return data\n  }\n  catch (error) {\n    // 这里会捕获网络错误和我们手动抛出的 HTTP 状态错误\n    console.error('Fetch 操作失败:', error.message)\n  }\n}\n\n// 示例：请求一个不存在的资源\ncheckStatus('https://jsonplaceholder.typicode.com/invalid-url')\n","error-handling.ts",[303,1277,1278,1295,1301,1319,1323,1328,1333,1351,1356,1397,1401,1405,1424,1442,1448,1452,1464,1469,1497,1501,1505,1509,1514],{"__ignoreMap":329},[333,1279,1280,1282,1284,1287,1289,1291,1293],{"class":335,"line":336},[333,1281,340],{"class":339},[333,1283,344],{"class":343},[333,1285,1286],{"class":347}," checkStatus",[333,1288,352],{"class":351},[333,1290,356],{"class":355},[333,1292,359],{"class":351},[333,1294,362],{"class":351},[333,1296,1297,1299],{"class":335,"line":365},[333,1298,369],{"class":368},[333,1300,362],{"class":351},[333,1302,1303,1305,1307,1309,1311,1313,1315,1317],{"class":335,"line":374},[333,1304,377],{"class":343},[333,1306,381],{"class":380},[333,1308,385],{"class":384},[333,1310,388],{"class":368},[333,1312,391],{"class":347},[333,1314,352],{"class":394},[333,1316,356],{"class":397},[333,1318,400],{"class":394},[333,1320,1321],{"class":335,"line":403},[333,1322,407],{"emptyLinePlaceholder":406},[333,1324,1325],{"class":335,"line":410},[333,1326,1327],{"class":413},"    // 对于 404 等 HTTP 错误，fetch 不会抛出异常\n",[333,1329,1330],{"class":335,"line":417},[333,1331,1332],{"class":413},"    // 需要手动检查状态\n",[333,1334,1335,1337,1339,1341,1343,1345,1347,1349],{"class":335,"line":444},[333,1336,420],{"class":368},[333,1338,423],{"class":394},[333,1340,426],{"class":384},[333,1342,429],{"class":397},[333,1344,432],{"class":351},[333,1346,435],{"class":397},[333,1348,438],{"class":394},[333,1350,441],{"class":351},[333,1352,1353],{"class":335,"line":485},[333,1354,1355],{"class":413},"      // 创建一个包含状态信息的错误，以便后续处理\n",[333,1357,1358,1360,1362,1364,1366,1368,1371,1373,1375,1377,1379,1381,1384,1386,1388,1391,1393,1395],{"class":335,"line":491},[333,1359,447],{"class":368},[333,1361,450],{"class":384},[333,1363,453],{"class":347},[333,1365,352],{"class":394},[333,1367,459],{"class":458},[333,1369,1370],{"class":462},"服务器响应错误: ",[333,1372,467],{"class":466},[333,1374,429],{"class":397},[333,1376,432],{"class":472},[333,1378,475],{"class":397},[333,1380,478],{"class":466},[333,1382,1383],{"class":466}," ${",[333,1385,429],{"class":397},[333,1387,432],{"class":472},[333,1389,1390],{"class":397},"statusText",[333,1392,478],{"class":466},[333,1394,459],{"class":458},[333,1396,400],{"class":394},[333,1398,1399],{"class":335,"line":496},[333,1400,488],{"class":351},[333,1402,1403],{"class":335,"line":502},[333,1404,407],{"emptyLinePlaceholder":406},[333,1406,1407,1409,1411,1413,1415,1417,1420,1422],{"class":335,"line":524},[333,1408,527],{"class":397},[333,1410,432],{"class":351},[333,1412,532],{"class":347},[333,1414,352],{"class":394},[333,1416,583],{"class":458},[333,1418,1419],{"class":462},"请求成功！",[333,1421,583],{"class":458},[333,1423,400],{"class":394},[333,1425,1426,1428,1430,1432,1434,1436,1438,1440],{"class":335,"line":542},[333,1427,377],{"class":343},[333,1429,507],{"class":380},[333,1431,385],{"class":384},[333,1433,388],{"class":368},[333,1435,381],{"class":397},[333,1437,432],{"class":351},[333,1439,518],{"class":347},[333,1441,521],{"class":394},[333,1443,1444,1446],{"class":335,"line":551},[333,1445,545],{"class":368},[333,1447,548],{"class":397},[333,1449,1450],{"class":335,"line":557},[333,1451,554],{"class":351},[333,1453,1454,1456,1458,1460,1462],{"class":335,"line":572},[333,1455,560],{"class":368},[333,1457,423],{"class":394},[333,1459,565],{"class":397},[333,1461,438],{"class":394},[333,1463,441],{"class":351},[333,1465,1466],{"class":335,"line":599},[333,1467,1468],{"class":413},"    // 这里会捕获网络错误和我们手动抛出的 HTTP 状态错误\n",[333,1470,1471,1473,1475,1477,1479,1481,1484,1486,1488,1490,1492,1495],{"class":335,"line":604},[333,1472,527],{"class":397},[333,1474,432],{"class":351},[333,1476,565],{"class":347},[333,1478,352],{"class":394},[333,1480,583],{"class":458},[333,1482,1483],{"class":462},"Fetch 操作失败:",[333,1485,583],{"class":458},[333,1487,591],{"class":351},[333,1489,594],{"class":397},[333,1491,432],{"class":351},[333,1493,1494],{"class":397},"message",[333,1496,400],{"class":394},[333,1498,1499],{"class":335,"line":610},[333,1500,554],{"class":351},[333,1502,1503],{"class":335,"line":615},[333,1504,607],{"class":351},[333,1506,1507],{"class":335,"line":621},[333,1508,407],{"emptyLinePlaceholder":406},[333,1510,1511],{"class":335,"line":973},[333,1512,1513],{"class":413},"// 示例：请求一个不存在的资源\n",[333,1515,1516,1519,1521,1523,1526,1528],{"class":335,"line":986},[333,1517,1518],{"class":347},"checkStatus",[333,1520,352],{"class":397},[333,1522,583],{"class":458},[333,1524,1525],{"class":462},"https://jsonplaceholder.typicode.com/invalid-url",[333,1527,583],{"class":458},[333,1529,400],{"class":397},[1531,1532,1533],"style",{},"html pre.shiki code .sTNss, html code.shiki .sTNss{--shiki-light:#9C3EDA;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672}html pre.shiki code .srJo8, html code.shiki .srJo8{--shiki-light:#9C3EDA;--shiki-light-font-style:inherit;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#66D9EF;--shiki-sepia-font-style:italic}html pre.shiki code .sD0ED, html code.shiki .sD0ED{--shiki-light:#6182B8;--shiki-default:#6F42C1;--shiki-dark:#B392F0;--shiki-sepia:#A6E22E}html pre.shiki code .swvn1, html code.shiki .swvn1{--shiki-light:#39ADB5;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2}html pre.shiki code .sQgqH, html code.shiki .sQgqH{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#E36209;--shiki-default-font-style:inherit;--shiki-dark:#FFAB70;--shiki-dark-font-style:inherit;--shiki-sepia:#FD971F;--shiki-sepia-font-style:italic}html pre.shiki code .sRxSC, html code.shiki .sRxSC{--shiki-light:#39ADB5;--shiki-light-font-style:italic;--shiki-default:#D73A49;--shiki-default-font-style:inherit;--shiki-dark:#F97583;--shiki-dark-font-style:inherit;--shiki-sepia:#F92672;--shiki-sepia-font-style:inherit}html pre.shiki code .s91G_, html code.shiki .s91G_{--shiki-light:#90A4AE;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#F8F8F2}html pre.shiki code .sGXK2, html code.shiki .sGXK2{--shiki-light:#39ADB5;--shiki-default:#D73A49;--shiki-dark:#F97583;--shiki-sepia:#F92672}html pre.shiki code .squCx, html code.shiki .squCx{--shiki-light:#E53935;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2}html pre.shiki code .ss--_, html code.shiki .ss--_{--shiki-light:#90A4AE;--shiki-default:#24292E;--shiki-dark:#E1E4E8;--shiki-sepia:#F8F8F2}html pre.shiki code .ss7Ak, html code.shiki .ss7Ak{--shiki-light:#90A4AE;--shiki-light-font-style:italic;--shiki-default:#6A737D;--shiki-default-font-style:inherit;--shiki-dark:#6A737D;--shiki-dark-font-style:inherit;--shiki-sepia:#88846F;--shiki-sepia-font-style:inherit}html pre.shiki code .siCPE, html code.shiki .siCPE{--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74}html pre.shiki code .sLACW, html code.shiki .sLACW{--shiki-light:#91B859;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74}html pre.shiki code .slF1C, html code.shiki .slF1C{--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#F92672}html pre.shiki code .s00De, html code.shiki .s00De{--shiki-light:#39ADB5;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#F8F8F2}html .light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html.light .shiki span {color: var(--shiki-light);background: var(--shiki-light-bg);font-style: var(--shiki-light-font-style);font-weight: var(--shiki-light-font-weight);text-decoration: var(--shiki-light-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html.sepia .shiki span {color: var(--shiki-sepia);background: var(--shiki-sepia-bg);font-style: var(--shiki-sepia-font-style);font-weight: var(--shiki-sepia-font-weight);text-decoration: var(--shiki-sepia-text-decoration);}html pre.shiki code .sJhdN, html code.shiki .sJhdN{--shiki-light:#E53935;--shiki-default:#032F62;--shiki-dark:#9ECBFF;--shiki-sepia:#E6DB74}html pre.shiki code .sYThS, html code.shiki .sYThS{--shiki-light:#F76D47;--shiki-default:#005CC5;--shiki-dark:#79B8FF;--shiki-sepia:#AE81FF}",{"title":329,"searchDepth":365,"depth":365,"links":1535},[1536,1537,1538,1542],{"id":298,"depth":365,"text":298},{"id":638,"depth":365,"text":638},{"id":700,"depth":365,"text":700,"children":1539},[1540],{"id":1121,"depth":374,"text":1541},"init 对象常用选项",{"id":1244,"depth":365,"text":1244},"md",null,{},{"title":24,"description":27},{"loc":25},"UfUaOMiLw4vSGb59vAtKFHcHY_pwYlP55FCErHUMFGw",[1550,1551],{"title":19,"path":20,"stem":21,"description":22,"children":-1},{"title":37,"path":38,"stem":39,"description":40,"children":-1},1756113720630]